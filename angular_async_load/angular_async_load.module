<?php
/**
 * Implements hook_menu().
 */
function angular_async_load_menu() {
  $items = array();

  $items['api/node'] = array(
    'access arguments' => array('access content'),
    'page callback'     => 'angular_node_api',
    'page arguments' => array(2),
    'delivery callback' => 'drupal_json_output'
  );

  return $items;
}
/**
 * API callback to return nodes in JSON format
 *
 * @param $param
 * @return array
 */
function angular_node_api($param) {

  // If passed param is node id
  if ($param && is_numeric($param)) {
    $node = node_load($param);
    return array(
      'nid' => $param,
      'uid' => $node->uid,
      'title' => check_plain($node->title),
      'body' => $node->body[LANGUAGE_NONE][0]['value'],
    );
  }
  // If passed param is text value
  elseif ($param && !is_numeric($param)) {
    $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id WHERE n.title LIKE :pattern ORDER BY n.created DESC LIMIT 5", array(':pattern' => '%' . db_like($param) . '%'))->fetchAll();
    return $nodes;
  }
  // If there is no passed param
  else {
    $nodes = db_query("SELECT nid, uid, title FROM {node} n JOIN {field_data_body} b ON n.nid = b.entity_id ORDER BY n.created DESC LIMIT 10")->fetchAll();
    return $nodes;
  }
}

/**
 * Implements hook_theme().
 */
function angular_async_load_theme($existing, $type, $theme, $path) {
  return array(
    'anglisting' => array(
      'template' => 'tpl/anglisting',
      'variables' => array()
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function angular_async_load_block_info() {

  $blocks['nodes_in_angular'] = array(
    'info' => t('Node listing'),
    'status' => TRUE,
    'region' => 'secondary',
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function angular_async_load_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'nodes_in_angular':
      $block['subject'] = t('Latest nodes');
      $block['content'] = array(
        '#theme' => 'anglisting',
        '#attached' => array(
          'js' => array(
            drupal_get_path('module', 'angular_async_load') . '/lib/angular.js',
            drupal_get_path('module', 'angular_async_load') . '/lib/ngResource/angular-resource.min.js',
            drupal_get_path('module', 'angular_async_load') . '/lib/ngDialog/ngDialog.min.js',
            drupal_get_path('module', 'angular_async_load') . '/js/ang.js',
          ),
          'css' => array(
            drupal_get_path('module', 'angular_async_load') . '/lib/ngDialog/ngDialog.min.css',
            drupal_get_path('module', 'angular_async_load') . '/lib/ngDialog/ngDialog-theme-default.min.css',
          ),
        ),
      );
      break;
  }

  return $block;
}

/**
 * Implements template_preprocess_angular_listing().
 */
function angular_async_load_preprocess_ang_listing(&$vars) {
  // Can stay empty for now.
}
